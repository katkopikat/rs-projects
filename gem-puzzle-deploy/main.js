(()=>{"use strict";class e{constructor(e,t){this.index=t,this.puzzle=e,this.width=this.puzzle.width/this.puzzle.size,this.height=this.width,this.container=this.createCellElement(),e.container.appendChild(this.container)}createCellElement(){const e=document.createElement("div");e.classList.add("cell"),e.classList.add("disabled"),e.style.order=`${this.index+1}`,e.dataset.id=`${this.index+1}`,e.dataset.pos=`${this.index+1}`,e.style.backgroundImage=`url(${this.puzzle.imageSrc})`,e.style.backgroundSize=`${this.puzzle.width}rem ${this.puzzle.height}rem`,e.innerText=`${this.index+1}`,e.style.color="rgba(255,255,255,0.3)";const t=this.puzzle.width/this.puzzle.size,s=this.puzzle.height/this.puzzle.size,i=t*(this.index%this.puzzle.size),n=s*Math.floor(this.index/this.puzzle.size);return e.style.height=this.puzzle.height/this.puzzle.size-.2+"rem",e.style.width=this.puzzle.width/this.puzzle.size-.2+"rem",e.style.backgroundPosition=`-${i}rem -${n}rem`,e}}class t{constructor(e,t,s,i,n){this.parentConteiner=e,this.width=t,this.size=s,this.mode=i,this.storage=n,this.arrPosition=[],this.countMoves=0,this.limitLeft=[],this.limitRight=[],this.allowBtnForClick=[],this.emptyPos=null,this.timerId=null,this.isAutoClick=!1,this.gameIsPaused=!1,this.audioOn=!0,this.scoresIsOpen=!1,this.rulesIsOpen=!1,this.settingsIsOpen=!1,this.saveGame(),this.openMenu(),this.storage.createResultsSet()}init(){this.container=this.createWrapper(),this.parentConteiner.appendChild(this.container),this.arrPosition.splice(0,this.arrPosition.length)}createWrapper(){const e=document.createElement("div");return e.className="puzzle",e.style.position="relative",e.style.margin="2rem auto",e.style.width=`${this.width}rem`,document.querySelector(".wrapper").append(e),e}setLimite(){for(let e=1;e<=this.size*this.size;e+=this.size)this.limitLeft.push(e);for(let e=this.size;e<=this.size*this.size;e+=this.size)this.limitRight.push(e)}getEmptyPosition(){return this.emptyPos=document.querySelector(".empty").style.order,this.emptyPos}addClickable(){let e,t,s,i;return this.emptyPos=+this.getEmptyPosition(),this.emptyPos-this.size>=1&&(e=document.querySelector(`[data-pos="${this.emptyPos-this.size}"]`),e.classList.add("clickable"),this.allowBtnForClick.push(this.emptyPos-this.size)),this.emptyPos+this.size<=this.size*this.size&&(t=document.querySelector(`[data-pos="${this.emptyPos+this.size}"]`),t.classList.add("clickable"),this.allowBtnForClick.push(this.emptyPos+this.size)),this.limitLeft.includes(this.emptyPos)||(s=document.querySelector(`[data-pos="${this.emptyPos-1}"]`),s.classList.add("clickable"),this.allowBtnForClick.push(this.emptyPos-1)),this.limitRight.includes(this.emptyPos)||(i=document.querySelector(`[data-pos="${this.emptyPos+1}"]`),i.classList.add("clickable"),this.allowBtnForClick.push(this.emptyPos+1)),this.allowBtnForClick}deleteClickable(){return this.allowBtnForClick=[],document.querySelectorAll(".clickable").forEach((e=>{e.classList.remove("clickable")})),this.allowBtnForClick}clickItems(){const e=document.querySelector(".empty"),t=document.querySelectorAll(".cell"),s=document.querySelector(".audio");t.forEach(((t,i)=>{t.addEventListener("click",(n=>{t.style.setProperty("transition","all 0.3s ease-in-out");const a=parseInt(t.style.width,10)+.6;if(this.isAutoClick){const e=t.style.order;t.style.order=this.emptyPos,t.dataset.pos=this.emptyPos,document.querySelector(".empty").style.order=e,document.querySelector(".empty").dataset.pos=e,this.arrPosition.push(`${i+1},${e},${this.emptyPos}`),this.deleteClickable(),this.addClickable(),1===this.countMoves&&this.startTimer()}else this.audioOn&&s.play(),n.target.style.order===`${this.emptyPos+1}`?t.style.transform=`translateX(-${a}rem)`:n.target.style.order===""+(this.emptyPos-1)?t.style.transform=`translateX(${a}rem)`:n.target.style.order===`${this.emptyPos+this.size}`?t.style.transform=`translateY(-${a}rem)`:n.target.style.order===""+(this.emptyPos-this.size)&&(t.style.transform=`translateY(${a}rem)`),setTimeout((()=>{t.style.setProperty("transition","none"),t.style.setProperty("transform","none");const s=t.style.order;t.style.order=this.emptyPos,t.dataset.pos=this.emptyPos,e.style.order=s,e.dataset.pos=s,this.arrPosition.push(`${i+1},${s},${this.emptyPos}`),this.countMoves+=1,this.updateMoves(),this.gameIsSolved(),this.deleteClickable(),this.addClickable(),1===this.countMoves&&this.startTimer()}),350)}))}))}static getRandomInt(e,t){const s=Math.ceil(e),i=Math.floor(t);return Math.floor(Math.random()*(i-s))+s}randomizeItem(){let e;3===this.size&&(e=t.getRandomInt(40,80)),4===this.size&&(e=t.getRandomInt(100,150)),5!==this.size&&6!==this.size&&7!==this.size||(e=t.getRandomInt(150,200)),8===this.size&&(e=t.getRandomInt(200,250));for(let t=0;t<e;t+=1)this.isAutoClick=!0,this.autoClickItems();return this.updateAfterAutoClick(),this.countMoves}autoClickItems(){const e=this.allowBtnForClick[t.getRandomInt(0,this.allowBtnForClick.length)];document.querySelector(`[data-pos="${e}"]`).click(this.clickItems)}updateAfterAutoClick(){return this.isAutoClick=!1,this.isAutoClick}updateMoves(){document.querySelector(".moves").innerText=`Moves: ${this.countMoves}`}removeDuplicateSteps(){const e=[...this.arrPosition].reverse();for(let t=0;t<3;t+=1)for(let t=0;t<e.length-1;t+=1){const s=e[t].split(","),i=e[t+1].split(",");s[0]===i[0]&&s[1]===i[2]&&s[2]===i[1]&&e.splice(t,2)}return this.arrPosition=this.arrPosition.splice(0,this.arrPosition.length),this.arrPosition=[...e],this.arrPosition}reverseHistory(){this.removeDuplicateSteps();const e=[...this.arrPosition],t=(e,s=0)=>{const i=e[s].split(","),n=document.querySelector(".empty");document.querySelector(`[data-id="${i[0]}"]`).style.order=`${i[1]}`,n.style.order=`${i[2]}`,s!==e.length-1&&setTimeout((()=>{t(e,s+1)}),500)};t(e)}showSolve(){document.querySelector(".item--solution").addEventListener("click",(()=>{this.reverseHistory()}))}startTimer(){let e=0,t=0,s=0;this.timerId=setInterval((()=>{t=e%60,s=Math.trunc(e/60%60);const i=t>9?`${t}`:`0${t}`,n=s>9?`${s}`:`0${s}`;document.querySelector(".time").innerText=`Time: ${n}:${i}`,e+=1}),1e3)}clearTimer(){setTimeout((()=>{clearInterval(this.timerId)}),0)}gameIsSolved(){for(let e=1;e<=this.size*this.size;e+=1){const{pos:t}=document.querySelector(`[data-pos="${e}"]`).dataset,{id:s}=document.querySelector(`[data-pos="${e}"]`).dataset;if(t===s&&e===this.size*this.size)this.showWinMessage(),this.clearTimer();else if(t!==s)break}}openMenu(){const e=["new_game","save_game","scores","settings","rules","solution"];return document.querySelector(".menu__btn").addEventListener("click",(()=>{document.querySelector(".menu").classList.remove("inactive"),e.forEach((e=>{document.querySelector(`.item--${e}`).classList.add(`item--${e}--open`)}))})),t.showRules(),this.showScore(),t.closeMenu(),this.gameIsPaused}static closeMenu(){document.querySelector(".close--menu").addEventListener("click",(()=>{document.querySelector(".menu").classList.add("inactive")}))}showWinMessage(){const e=document.createElement("div");e.classList.add("win");const t=document.querySelector(".time").innerText.replace("Time:","");e.innerHTML=`<span class="corner">\n                <span class="line line--horizontal"></span>\n                <span class="line line--vertical"></span>\n            </span>\n            <h2>You won!</h2>\n            <p class="winText">You won in ${t} and ${this.countMoves} moves!</p>\n            <span class="btn__close btn__close--win">\n                <span class="close__line close-line--vert"></span>\n                <span class="close__line close-line--horiz"></span>\n            </span>`,document.querySelector(".header").after(e),setTimeout((()=>{document.querySelector(".btn__close--win").addEventListener("click",(()=>{e.remove()}))}),500),this.saveResult()}static showRules(){document.querySelector(".item--rules").addEventListener("click",(()=>{const e=document.createElement("div");e.classList.add("rules"),e.innerHTML='<span class="corner">\n                <span class="line line--horizontal"></span>\n                <span class="line line--vertical"></span>\n            </span>\n            <h2>Rules</h2>\n             <p>The object of the puzzle is to place the tiles in order<br>\n                by making sliding moves that use the empty space.<br>\n                <br>\n                You can save your game and load it later.<br>\n                Or you can just use pause button.<br>\n                Also you can choose game field size and mode (picture or number),<br>\n                and turn on or tutn off sounds in Settings.<br>\n                Have a nice game!</p>\n            <span class="btn__close btn__close--rules">\n                <span class="close__line close-line--vert"></span>\n                <span class="close__line close-line--horiz"></span>\n            </span>',document.querySelector(".menu_content").appendChild(e),setTimeout((()=>{document.querySelector(".btn__close--rules").addEventListener("click",(()=>{e.remove(),document.querySelector(".menu").classList.add("inactive")}))}),1e3)}))}saveGame(){document.querySelector(".item--save_game").addEventListener("click",(()=>{this.storage.saveGame(this.arrPosition)}))}saveResult(){const e=document.querySelector(".time").innerText.replace("Time:",""),t=`${this.countMoves}_________${e}_______${this.size}_______${this.mode}`;this.storage.saveResult(t)}showScore(){return this.scoresIsOpen||(this.scoresIsOpen=!0,document.querySelector(".item--scores").addEventListener("click",(()=>{const e=document.createElement("div");e.classList.add("score"),e.innerHTML='<span class="corner">\n                <span class="line line--horizontal"></span>\n                <span class="line line--vertical"></span>\n            </span>\n            <h2>Best scores</h2>\n         <ul class="scores__list">\n         <li class="score_position position_heading">#_______Steps_______Time_______Field_______Mode</li>\n         </ul>\n            <span class="btn__close btn__close--score">\n                <span class="close__line close-line--vert"></span>\n                <span class="close__line close-line--horiz"></span>\n            </span>',document.querySelector(".menu_content").appendChild(e);const t=Array.from(this.storage.createResultsSet());t.length>1&&(e=>{const t=/\D/g;e.sort(((e,s)=>parseInt(e.replace(t,""),10)-parseInt(s.replace(t,""),10)))})(t);for(let e=0;e<t.length;e+=1)if(e<10){const s=document.createElement("li");s.classList.add("score_position"),s.classList.add(`position${e+1}`),document.querySelector(".scores__list").lastChild.after(s),s.innerText=`${e+1}_________${t[e]}`}setTimeout((()=>{document.querySelector(".btn__close--score").addEventListener("click",(()=>{e.remove(),document.querySelector(".menu").classList.add("inactive"),this.scoresIsOpen=!1}))}),1e3)}))),this.scoresIsOpen}}class s extends t{constructor(e,t,s,i,n,a){super(e,s,i,n,a),this.imageSrc=t,this.parentConteiner=e,this.width=s,this.height=s,this.size=i,this.mode=n,this.cells=[],this.init();const l=new Image;l.onload=()=>{this.height=l.height*this.width/l.width,this.container.style.width=`${this.width}rem`,this.container.style.height=`${this.height}rem`},l.src=this.imageSrc,this.generateCells(),this.setLimite(),this.addClickable(),this.randomizeItem(),this.showSolve()}generateCells(){for(let t=0;t<this.size*this.size;t+=1)this.cells.push(new e(this,t));document.querySelector(`[data-id="${this.size*this.size}"]`).classList.add("empty"),this.clickItems()}}class i{constructor(e,t){this.index=t,this.puzzle=e,this.height=this.puzzle.height/this.puzzle.size,this.width=this.height,this.container=this.createCellElement(),document.querySelector(".puzzle").appendChild(this.container)}createCellElement(){const e=document.createElement("div");return e.classList.add("cell"),e.classList.add("disabled"),e.style.order=`${this.index+1}`,e.innerText=`${this.index+1}`,e.dataset.id=`${this.index+1}`,e.dataset.pos=`${this.index+1}`,e.style.height=this.puzzle.height/this.puzzle.size-.2+"rem",e.style.width=this.puzzle.width/this.puzzle.size-.2+"rem",5===this.puzzle.size&&e.classList.add("cell5"),6===this.puzzle.size&&e.classList.add("cell6"),7===this.puzzle.size&&e.classList.add("cell7"),8===this.puzzle.size&&e.classList.add("cell8"),e}}class n extends t{constructor(e,t,s,i,n){super(e,t,s,i,n),this.width=t,this.height=t,this.size=s,this.mode=i,this.cells=[],this.init(),this.generateCells(),this.setLimite(),this.addClickable(),this.randomizeItem(),this.showSolve()}generateCells(){for(let e=0;e<this.size*this.size;e+=1)this.cells.push(new i(this,e));document.querySelector(`[data-id="${this.size*this.size}"]`).classList.add("empty"),this.clickItems()}}let a="",l=4;const o=new class{constructor(){this.resultsSet=new Set}createResultsSet(){let e=1;for(let t=0;t<localStorage.length;t+=1)localStorage.key(t).match(/result/)&&(this.resultsSet.add(localStorage.getItem(`result${e}`)),e+=1);return this.resultsSet}saveResult(e){return localStorage.setItem(`result${this.resultsSet.size+1}`,e),this.resultsSet.add(e),this.resultsSet}saveGame(e){localStorage.setItem("savedgame",e)}};function c(){const e=document.querySelector(".puzzle-wrapper"),t=document.querySelector(".menu_content");for(;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)t.removeChild(t.firstChild)}function r(){return new n(document.querySelector(".puzzle-wrapper"),30,l,"number",o),a="number",a}function d(){const e=(1,151,Math.floor(150*Math.random()+1));return new s(document.querySelector(".puzzle-wrapper"),`https://raw.githubusercontent.com/irinainina/image-data/master/box/${e}.jpg`,30,l,"picture",o),a="picture",a}!function(){const e=document.createElement("div");e.className="content",document.body.prepend(e);const t=document.createElement("div");t.className="wrapper",e.prepend(t);const s=document.createElement("div");s.className="header",s.innerHTML='<span class="header__wrapper"> \n                    <h1 class="game__name">#Gem<br> Puzzle</h1>\n                    <span class="status">\n                    <span class="status__item menu__btn">Menu</span>\n                    <span class="status__item moves">Moves: 0</span>\n                    <span class="status__item time">Time: 00:00</span>       \n                    <ul class="menu inactive">\n                        <li class="menu__item item--new_game">New game</li>\n                        <li class="menu__item item--save_game">Save game</li>\n                        <li class="menu__item item--scores">Best scores</li>\n                        <li class="menu__item item--settings">Settings</li>\n                        <li class="menu__item item--solution">Solution</li>\n                        <li class="menu__item item--rules">Rules</li>\n                        <li class="menu__item close--menu">   <span class="btn__close">\n                        <span class="close__line close-line--vert"></span>\n                        <span class="close__line close-line--horiz"></span>\n                    </span></li>\n                 \n                    </ul>\n                    </span>\n                    <audio class="audio" src="assets/sounds/move.mp3"></audio>',t.prepend(s);const i=document.createElement("div");i.className="menu_content",s.after(i);const n=document.createElement("div");n.className="puzzle-wrapper",t.append(n)}(),r(),document.querySelector(".item--settings").addEventListener("click",(()=>{const e=document.createElement("div");e.classList.add("settings"),e.innerHTML='<span class="corner">\n            <span class="line line--horizontal"></span>\n            <span class="line line--vertical"></span>\n        </span>\n        <h2>Settings</h2>\n        <span class="type_block">\n         <span class="btn__type">mode: </span>\n            <span class="settings__item mode--number active_mode" data-mode="active_mode">number</span>\n            <span class="settings__item mode--picture" data-mode="inactive_mode">picture</span>\n        </span><br>\n        <span class="size_block">\n        <span class="btn__size">field: </span>\n            <span class="settings__item size__item size3" data-size="inactive_size"> 3x3 </span>\n            <span class="settings__item size__item size4 active_size" data-size="active_size"> 4x4 </span>\n            <span class="settings__item size__item size5" data-size="inactive_size"> 5x5 </span>\n            <span class="settings__item size__item size6" data-size="inactive_size"> 6x6 </span>\n            <span class="settings__item size__item size7" data-size="inactive_size"> 7x7 </span>\n            <span class="settings__item size__item size8" data-size="inactive_size"> 8x8 </span>\n</span><br>\n<span class="sound_block">\n        <span class="btn__sound">sound: </span>\n            <span class="settings__item sound--on active_sound " data-sound="active_sound">on</span>\n            <span class="settings__item sound--off" data-sound="inactive_sound">off</span>\n</span>\n        <span class="btn__close close-settings">\n            <span class="close__line close-line--vert"></span>\n            <span class="close__line close-line--horiz"></span>\n        </span>',document.querySelector(".menu_content").appendChild(e),setTimeout((()=>{const t=document.querySelector(".mode--picture"),s=document.querySelector(".mode--number"),i=document.querySelectorAll(".size__item"),n=document.querySelector(".sound--on"),o=document.querySelector(".sound--off"),h=document.querySelector(".audio");i.forEach(((e,t)=>{e.addEventListener("click",(()=>{l=t+3,document.querySelector(".active_size").classList.remove("active_size"),e.classList.add("active_size"),c(),"number"===a?r():d()}))})),s.addEventListener("click",(()=>(a="number",t.classList.remove("active_mode"),s.classList.add("active_mode"),c(),r(),a))),t.addEventListener("click",(()=>(a="picture",t.classList.add("active_mode"),s.classList.remove("active_mode"),c(),d(),a))),o.addEventListener("click",(()=>{n.classList.remove("active_sound"),o.classList.add("active_sound"),h.muted=!0})),n.addEventListener("click",(()=>{o.classList.remove("active_sound"),n.classList.add("active_sound"),h.muted=!1})),document.querySelector(".close-settings").addEventListener("click",(()=>{e.remove()}))}),500)})),document.querySelector(".item--new_game").addEventListener("click",(()=>{"number"===a?(c(),r()):(c(),d())}))})();